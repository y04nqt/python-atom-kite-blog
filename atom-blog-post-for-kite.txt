The 'hackable text editor for the 21st Century' describes Atom to a tee, a very versatile text editor. In this post, we are going to journey into learning the capabilities and functionalities Atom can provide to improve a developer's life. We'll briefly go over installing atom on windows and mac, themes and packages, customizing, and a few specific packages to help with python development. 

First, let's get Atom on our device! Let's start with Mac OS; you can download atom at ( https://atom.io/ ). The website ought to detect your device and present you with the correct download link. After clicking the download button, a ZIP file will download go ahead and unzip then the Atom application will become available. If you downloaded the ZIP to your Downloads directory, move the Atom Application to your Applications directory. Shazam! We now have Atom ready to rock and roll! Atom can also be called in your terminal and open the current directory.  In your project's directory type `atom .` to open the directory in Atom.

For windows user, again we go to Atom's site (https://atom.io), and you should see the download button with your device's OS information above it.
In case your version of windows doesn't appear, you can click 'Other Platforms' which will redirect you to the GitHub repo with all the operating systems Atom supports. After clicking the download button, the AtomSetup.exe will download then run the executable and Atom will launch once installation has finished! Command prompt can also be used to open atom and your current working directory. Navigate to your project's directory and enter `atom .` to open the directory in Atom.

The design and user interface of Atom follows material design principles which provide an intuitive experience for developers of any caliber. If this design isn't quite your style, go ahead and download a different theme and hack your style into existence! The way atom allows developers to create packages and themes can make atom the text editor you've always wanted. If you feel inspired, then you too can be a contributor by creating or helping to improve a package. There are plenty of packages to help you with productivity, analytics, or making the development experience a splendid endeavor!

The main contributors to packages in Atom are by the community or companies looking to improve the lives of developers. On Atom's landing page; it lists Teletype for real-time collaboration, Atom IDE for completing the editor experience, and Git + GitHub integration for seamless code delivery. These packages are great to get started, but if you want to go further you'll need to open Atom and navigate to Atom in the command bar and click Preferences or use the keyboard shortcut `command + ,`. Once in Preferences you can check out the packages you already have or install new packages and themes.

Some of my favorite packages are WakaTime (automatic programming metrics), Beautify (code formatting), Kite (editor copilot), and the GitHub package. All of these help me develop with ease and peace of mind. Let's take a deeper dive into how these packages can also help you!

WakaTime is a great package to use if you want to quantify your programming time and efforts. WakaTime will track every second you are typing in Atom and produces reports on your account's dashboard. WakaTime doesn't necessarily represent your total time working, but will show the full time you've spent typing code. Time spent typing is a useful metric to show how accurate you are and can quantify where you need improvement. It is smart enough to break down the time spent by language, project, file, branch, commit, OS, editor, and feature. All of this is to help you improve your productivity but also understand how you develop software. The best thing about WakaTime is the price to use it is free! There are paid options for greater details, and increased date ranges for metrics. You can pay for yourself exclusively, or you can offer your team to be part of a paid plan! With all of this typing we do, how do we ensure it all looks good?

Beautify for Atom is a beautiful package to make your code look amazing! It is noninvasive and completely customizable.  Whether you prefer two or four space indentation, indentation with tabs, or preserving new lines there are plenty of options to choose from when setting up the configuration of Beautify. You go the simple configuration route which will be a broad configuration across all languages or nested configuration to specify languages' desired formatting. You have options when Beautify will do its job too! You can format a selection of code, a file upon saving, or the entire file on command. Beyond neatly arranging your code, another package can help you along the way with ranked completions.

Kite with atom will give ranked completions using machine learning to scan all the code on the web to provide you with the popular completions. Popular patterns paired with inline documentation and a plethora of code examples saves time by preventing switching between searching the internet and coding. Not to mention, this will also get your stats up for Wakatime! Having so much documentation in Atom supercharges the experience of programming.